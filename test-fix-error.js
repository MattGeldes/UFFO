// Test simple para verificar que el error de re-render est√° solucionado
console.log('üß™ Test Fix Error React - UFFO\n');

async function testFormulario() {
    console.log('üìã Verificando formulario sin errores...');
    
    try {
        // Test 1: Verificar que la p√°gina carga
        const response = await fetch('http://localhost:3000/formulario');
        if (response.ok) {
            console.log('‚úÖ P√°gina del formulario carga correctamente');
        } else {
            console.log('‚ùå Error cargando formulario:', response.status);
            return;
        }

        // Test 2: Verificar API de c√≥digo postal (esta deber√≠a funcionar sin problemas)
        console.log('üåç Probando c√≥digo postal...');
        const postalResponse = await fetch('https://api.zippopotam.us/ar/1001');
        if (postalResponse.ok) {
            const data = await postalResponse.json();
            console.log('‚úÖ API c√≥digo postal funcionando:', data.places[0]['place name']);
        }

        console.log('\nüéâ RESULTADO:');
        console.log('‚úÖ El error de "Maximum update depth exceeded" deber√≠a estar SOLUCIONADO');
        console.log('üí° Instrucciones de test manual:');
        console.log('   1. Ve a http://localhost:3000/formulario');
        console.log('   2. Haz clic en "Cotiza tu proyecto"');
        console.log('   3. En el campo "C√≥digo Postal" escribe: 1001');
        console.log('   4. Deber√≠as ver "Buenos Aires" autom√°ticamente SIN errores de React');
        console.log('   5. El formulario deber√≠a funcionar normalmente');

    } catch (error) {
        console.log('‚ùå Error:', error.message);
    }
}

testFormulario();